<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="volver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>