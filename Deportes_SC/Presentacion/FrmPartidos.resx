<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefrescar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YHBT+xJPYgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnGuardarResultado.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        dAAAA3QBAitBRQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAcKSURBVFhHxZZ7
        UJTXGYfP7oIXBEHksoLsgnILIBpABQUFgyAuIhcRBUGiEo2i9QJyWXG5KAoqFxUVbzQxUmUFUVQUZFEu
        XgIao0lj09TppO1faUZN2maaTOfpsDIaYWbNZIb2j2e+M78573zPnPec830CEP9PBgVvIrFV5VPQk9Gb
        0PLOdwH1CgIbHYltmf6s7GFub/UfdgQPnP8mBgWG8Dsz0Uv75amfnjz9kvL7hfidHY+/VsHW7lQeftPD
        o297/5P/Sdq0gXWGGBQYYtbZSa1HH1Tyl2+/puOvV6n76piepie1PP/nMy796QybuxM7B9YZYlBgCLfj
        ts+SL8Wg+/oKjX/fh/ab4pc0/PFDVl+PJuyC+7OBdYYYFBhCeciCCYctqXxQxAd/y3+dxweYeUZJsNaJ
        gXWGGBQYYnylOcr9Fuy5n8eRP+e+xvHPy/E/pSDod45DJ2C3zwyHMnN296gp/yrjNQ4/KmVqjT0BpxRD
        JyAvMcWudDQ77+aw64sN7Hr8igMPduFzzI5pNeOHTsB65yjkxWYU3N7K9odr0PTx6AVl94uYfGQcvsft
        h07AMt8EmyJTNN2ZZN9fSfYnryjt1eB1UM6UI+N+nUBRV9H8JQ1LPpbvkz+XbZdgvE3GcLWMkWpjTHOH
        MXrbcMbkjcRq+yjyurawuSeFzb0pbOmn+K4ajwobJh20xafajmknxzPzAyWzaycQWudMRKMbKS1Bz/d9
        uvnj+ifH5r8mEF4bPm1jy8YfM1oy8D7ojUQtQZYtZVi2lOFZRphkGWOaPYzROSOwVI8k58ZG0u8ksv5u
        Ehv6KbiViXuZFZ6VNkw+JMf3qD3+NQqCTjkScnYiYfUurNVFcvyzXdQ83v1j6Rfr9DemXkB5QNkafTaa
        ks4SSrqKydVlktOWQbZuC1m6zWS1b2KrbiOZuvVsbV9P/t2trLm1mLW3+0hg3Z0Eintz0HRvovB2JsV3
        cynt0VB2bweVD3Zz+OFeTn5exanPqqn9/SF23U9nw515118KSHdInyrLlOzsKCLpykISmlUkXFOR0Koi
        oU3FUl0kSe0LSLm5kNSOaFZ0xrCqK5a07jjeuxXH6n76xmndsazsitHPS74RxaqOBH7TuYb59eHIimRo
        OjJIuxFKwo3JT18KiEKBUAtSzy8jujGM6IthRF8OI7o5jJirYSxqmcfi6xEk6lQsa49k+c0o3u1YyMrO
        aFZ19cn009knF817XYtQ92wgvWMlYY3BGJdLESUCUSRY2hhJVLMHi6576TfrC4ECgcgRLDkbT8S5ECIa
        QohoDCGiKQTV5TlENYcSc20u8a3hLGmLIKldRcrNSFI7FrCiM0rfDvW9dajvpbPl9iqSW6Nw+1CO3TEz
        LKpGMLzCCLFHIHYI4s/PQ3XJndhWz58J5IunIksQfnwujpUOuBxxwqPGhbdPezHjnC9zm4L0qxF3LZyE
        lnCSrqtYfiOK1R3xpN2MIbEtlOALzvjXO+Cntcf7jBy3j6xRnLTA6ogJJvuNEXsFYqcgqSmSiCY3Fl57
        62ctyBeXRKbANMOU6WXT8SnzwafcB59KH/z2++FfNZXAQ/4EHw0g9EQgkdpZ+GrtmXFewayLToQ0TST5
        SjiL60OJ7yeu/h2i60OIPBfMfO0swusCiWuYy7xGL8IuurLgqvvlVwLbxFsiU/wg1glEmkCkCkSKQCS/
        eEqWC2SpEoxXSBmWJiP0RAD+DQqCL04g7IoL86+6Ea+dw7g8MxwKzHEqHoPznrG4V1jjVWXLlKPjmFoz
        nhmnX3wtQy+4/Cui2dnjpYB+sEV4iXVCJ1aK7/UvThKIxH6WCSTJEmSpUoxXyAg+6qf/FZt72ZnIFndi
        2jxZpJ2NfJsZ9gWjUey0YEKpJa7lVngctMG7Wo7vSTv8P1I8C6pzbJ7T+OLlrwn8EmQpEozelRJ4eAqz
        LjgRcdWV2DZPlt6cTGxdEDZqU+zyR/+6q/iXIEmSIFsuYXqVJ0EXHInoW/r2SSzv9iG2LgCr3FHINWZD
        JyCWCqQpEqZUuOLf4KDvf5zOi9RbvsRq/Rmba4KtxnRoBSTLJLjtVTL5zDhmNir1behbhfDTb2OZa4K1
        ZtTQCvRtUIdiW5x+OwbPWlv9uQ9sVOJ3zBkL9Uis8k2GUKDvRKQIxhSYY141AptqUxxOmKOsscCxwgbz
        vOGMLRw5dAJGqbJ/WL5vgusOG/3VKt0n0d/zw8pluJROxF5tzdiCUd8NrDPEoMAQZukjumcXKth02J1J
        xWMxyjXCOM+IGfsDUJXMw1XthJXGTDewzhCDAkPINeZ+qdUuPxXWejKnUoE0S4KRWsr7p1ezoEKFW8HE
        f1trTKYMrDPEoOBNrDinDE7TenzqvV/+vcgXyIokpDes/WFRdcwj7wLPwIHz38Sg4H/NfwFRM0gJols9
        lgAAAABJRU5ErkJggg==
</value>
  </data>
</root>